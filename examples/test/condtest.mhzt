#: this is a strict comparison - if the types are not the same, then the objects
 CANNOT be equal ##
if 10 [equals] 11
 say 10 == 11 : Wrong
end

if 10 [not-equals] 11
 say 10 != 11 : OK
else
 say 10 == 11 : Wrong
end

if hello [not-equals] world
 say hello != world : OK
else
 say hello == world : Wrong
end

unless true [equals] false
 say true != false : OK
end

unless true [equals] true
 say true != true : Wrong
else
 say true == true : OK
end

#: you can compare more than one object at a time:
 this compares all the arguments against each other. if at least one pair of
 these arguments is not equal - the result will be false. ##
if 10 10 [equals] 10 10 10 10
 say 10 == 10 == 10 == 10 == 10 == 10 : OK
else
 say 10 != 10 != 10 != 10 != 10 != 10 : Wrong
end

# assertions!
assert 10 [equals] 10 10 10 10 10 10 10 10
assert hello [not-equals] world
assert -10 [not-equals] 10

# unlike [equals] a type conversion will occur here
assert 1 [like] true
assert-not yes [like] no

# make sure all the ways of writing [equals] work
set a = 2
set b = 2
assert {a} [equals] {b}
assert {a} [eq] {b}
assert {a} [is] {b}
assert {a} [=] {b}
assert {a} [==] {b}

# same for [not-equals]
set b = 1
assert {a} [not-equals] {b}
assert {a} [neq] {b}
assert {a} [is-not] {b}
assert {a} [isnt] {b}
assert {a} [!=] {b}
assert {a} [~=] {b}

# now for [greater-than]
assert {a} [greater-than] {b}
assert {a} [greater] {b}
assert {a} [larger-than] {b}
assert {a} [larger] {b}
assert {a} [gt] {b}
assert {a} [>] {b}

# and last but not [lesser-than]
assert {b} [lesser-than] {a}
assert {b} [lesser] {a}
assert {b} [smaller-than] {a}
assert {b} [smaller] {a}
assert {b} [lt] {a}
assert {b} [<] {a}
